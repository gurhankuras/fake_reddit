import 'package:flutter/material.dart';
import 'package:flutter_slider_drawer/flutter_slider_drawer.dart';
import 'package:reddit_clone/_presentation/core/app_drawer.dart';
import 'package:reddit_clone/colors.dart';
import 'package:reddit_clone/new_page.dart';
import 'package:flutter_inner_drawer/inner_drawer.dart';
import '_presentation/core/search_bar_field.dart';

const double ANIMATION_BEGIN_OFFSET = 0;
const double ANIMATION_END_OFFSET = 240;

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  // with SingleTickerProviderStateMixin {
 

  // late AnimationController controller;
  // late Animation<double> animation;
  // double pos = 0;

  // @override
  // void initState() {
  //   super.initState();
  //   controller = AnimationController(
  //       duration: const Duration(milliseconds: 500), vsync: this);
  //   Animation<double> curve =
  //       CurvedAnimation(parent: controller, curve: Curves.easeIn);
  //   animation = Tween<double>(
  //     begin: ANIMATION_BEGIN_OFFSET,
  //     end: ANIMATION_END_OFFSET,
  //   ).animate(curve);
  //   controller.addListener(() {
  //     print("controller listener");
  //     print(animation.value);
  //     setState(() {
  //       pos = animation.value;
  //       print("pos : $pos");
  //     });
  //   });
  //   // controller.drive(child)
  // }

  double xPageOffset = 0;
  bool isDragging = false;
  bool isDrawerOpen = false;

  @override
  Widget build(BuildContext context) {
    print("BUILD");
    return Scaffold(
      backgroundColor: AppColors.lightBlack,
      body: Stack(
        children: [
          buildDrawer(),
          buildPage(),
        ],
      ),
    );
  }

  // @override
  // void dispose() {
  //   controller.dispose();
  //   super.dispose();
  // }

  // void closeDrawer() {
  //   controller.stop();

  //   animation = controller.drive(
  //     Tween<double>(
  //       begin: animation.value,
  //       end: pos,
  //     ),
  //   );
  //   controller.reverse();
  //   print("closeDrawer");
  // }

  // void openDrawer() {
  //   controller.stop();

  //   animation = controller.drive(
  //     Tween<double>(
  //       begin: pos,
  //       end: animation.value,
  //     ),
  //   );
  //   print("openDrawer");
  //   // controller.reset();
  //   controller.forward();
  //   // setState(() {
  //   //   xPageOffset = 230;
  //   //   isDrawerOpen = true;
  //   // });
  // }

  // // void setDrawerOpen(double offset) {
  // //   print("setDrawerOpen");
  // //   setState(() {
  // //     xPageOffset = xPageOffset + 1;
  // //   });
  // // }

  // SafeArea buildDrawer() => SafeArea(child: AppDrawer());

  // Widget buildPage() {
  //   return WillPopScope(
  //     onWillPop: () {
  //       print('onWillPop');
  //       if (isDrawerOpen) {
  //         closeDrawer();
  //         return Future.value(false);
  //       }
  //       return Future.value(true);
  //     },
  //     child: GestureDetector(
  //       onTap: isDrawerOpen ? closeDrawer : null,
  //       // onHorizontalDragStart: (details) => isDragging = true,
  //       // onHorizontalDragUpdate: (details) {
  //       //   print("onHorizontalDragUpdate");
  //       //   if (!isDragging) return;
  //       //   const double delta = 1;
  //       //   if (details.delta.dx > delta) {
  //       //     openDrawer();
  //       //     // setDrawerOpen(delta);
  //       //   } else if (details.delta.dx < -delta) {
  //       //     closeDrawer();
  //       //   }
  //       //   isDragging = false;
  //       // },
  //       onPanDown: (details) {
  //         print('onPanDown');
  //         controller.stop();
  //       },
  //       onPanUpdate: (details) {
  //         print(details);
  //         // if (details.delta.dx > 1) {
  //         if (pos + details.delta.dx > ANIMATION_END_OFFSET) {
  //           return;
  //         }
  //         if (pos + details.delta.dx < ANIMATION_BEGIN_OFFSET) {
  //           return;
  //         }
  //         setState(() {
  //           pos += details.delta.dx;
  //         });
  //         if (details.delta.dx < 0) {
  //           closeDrawer();
  //         } else if (details.delta.dx > 0) {
  //           openDrawer();
  //         }
  //         print("pos:: $pos");
  //         // openDrawer();
  //         // } else if (details.delta.dx < -1) {
  //         // pos -= details.delta.dx;

  //         // closeDrawer();
  //         // }
  //         // setState(() {
  //         //   _dragAlignment += Alignment(
  //         //     details.delta.dx / (size.width / 2),
  //         //     details.delta.dy / (size.height / 2),
  //         //   );
  //         // });
  //       },
  //       onPanEnd: (details) {
  //         if (animation.value < ANIMATION_END_OFFSET / 2) {
  //           print("animation.value = ${animation.value}");
  //           animation = controller.drive(
  //             Tween<double>(
  //               begin: animation.value,
  //               end: 0,
  //             ),
  //           );
  //           controller.forward();
  //         } else {
  //           animation = controller.drive(
  //             Tween<double>(
  //               begin: animation.value,
  //               end: ANIMATION_END_OFFSET,
  //             ),
  //           );
  //           controller.forward();
  //           print("animation.value = ${animation.value}");

  //           openDrawer();
  //         }
  //         print('onPanEnd');
  //         print(details);
  //       },
  //       child: Container(
  //         // curve: Curves.easeInCubic,
  //         // duration: Duration(milliseconds: 250),
  //         // transform: Matrix4.translationValues(xPageOffset, 0, 0),
  //         transform: Matrix4.translationValues(pos, 0, 0),

  //         child: AbsorbPointer(
  //           absorbing: isDrawerOpen,
  //           child: NewPage(openDrawer: openDrawer),
  //         ),
  //       ),
  //       // ),
  //     ),
  //   );
  // }
}
